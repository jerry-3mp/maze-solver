AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  maze-solver-server

  Sample SAM Template for maze-solver-server

Parameters:
  # Database configuration
  DbUrl:
    Type: String
    Default: 'jdbc:postgresql://localhost:5432/maze-solver'
    Description: Database connection URL
    NoEcho: true
  DbUsername:
    Type: String
    Default: 'postgres'
    Description: Database username for the application
    NoEcho: true
  DbPassword:
    Type: String
    Default: 'postgres'
    Description: Database password for the application
    NoEcho: true

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
    MemorySize: 512

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Resources:
  MazeSolverFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: .
      Handler: io.jistud.mazesolver.server.StreamLambdaHandler::handleRequest
      Runtime: java21
      Architectures:
      - arm64
      MemorySize: 512
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          SPRING_PROFILES_ACTIVE: lambda
          SPRING_DATASOURCE_URL: !Ref DbUrl
          SPRING_DATASOURCE_USERNAME: !Ref DbUsername
          SPRING_DATASOURCE_PASSWORD: !Ref DbPassword
      # VPC Configuration for accessing RDS
      VpcConfig:
        SecurityGroupIds:
          - sg-071150ecf471c8556
        SubnetIds:
          - subnet-07c06215afbdb1972
          - subnet-07bfd74e65da2a9cc
          - subnet-07107f000166b107e
      # Required IAM permissions for Lambda in VPC
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ec2:CreateNetworkInterface'
                - 'ec2:DescribeNetworkInterfaces'
                - 'ec2:DeleteNetworkInterface'
                - 'ec2:DescribeSubnets'
                - 'ec2:DescribeSecurityGroups'
              Resource: '*'
      Events:
        MazeSolver:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /{proxy+}
            Method: ANY

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  MazeSolverApi:
    Description: API Gateway endpoint URL for Prod stage for Maze Solver function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/maze-solver/"
  MazeSolverFunction:
    Description: Maze Solver Lambda Function ARN
    Value: !GetAtt MazeSolverFunction.Arn
  MazeSolverFunctionIamRole:
    Description: Implicit IAM Role created for Maze Solver function
    Value: !GetAtt MazeSolverFunctionRole.Arn
